app:
  title: Kubeosx
  baseUrl: http://localhost:3000

organization:
  name: Kubeosx

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ghp # ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  '/prometheus/api':
    # url to the api and path of your hosted prometheus instance
    target: http://localhost:9090/api/v1/
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  environment: development
  providers: 
    github:
      development:
        clientId: asd
        clientSecret: asd

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  processingInterval: { minutes: 2 }
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    # - type: file
    #   target: ../../examples/entities.yaml

    # Local example template
    # - type: file
    #   target: ../../examples/template/template.yaml
    #   rules:
    #     - allow: [Template]

    # Local example organizational data
    - type: url
      target: https://github.com/kubeosx/kubeos/blob/main/location.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain,Template]

      
    - type: url
      target: https://github.com/kubeosx/kubeos-dotnet-gitops-template/blob/main/template.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain,Template]

    - type: url
      target: https://github.com/kubeosx/kubeos-node-template/blob/main/template.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain,Template]
       
    - type: url
      target: https://github.com/kubeosx/kubeos-angular-template/blob/main/template.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain,Template]

    - type: url
      target: https://github.com/kubeosx/kubeos-dotnet-template/blob/main/template.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain,Template]

    - type: url
      target: https://github.com/kubeosx/kubeos-cluster/blob/main/catalog-info.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain, Template]
        
    - type: url
      target: https://github.com/kubeosx/kubeos-baseline/blob/main/location.yaml
      rules:
        - allow: [Group, Component, System, API, Resource, Location, User, Domain,Template]


        
kubernetes:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: https://kubernetes.docker.internal:6443
          name: dockerk8
          authProvider: serviceAccount
          skipTLSVerify: true
          skipMetricsLookup: true
          serviceAccountToken: eyJhbGciOiJSUzI1NiIsImtpZCI6IjdqZlpiSHZKcElZM3YxSHZKUjlIVmpFaFFvSXJVOGlla280Mms0WDIyeVUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Imt1YmVvcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlb3MiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJiMDZkM2RkMi1jN2M4LTQ5MTItOGI5NC1lYTE5MDRjY2RmNWEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDprdWJlb3MifQ.gZDjMP4eVtLCeJQ7Zd6lbPSRkruBzslYieVztmqt-9K9fi8V3r66KdMV5PwCFYHB11NPtV_Ls84Osd0fTkCsS0bE9q-eZs6a83vzZECPoXSWWCbdjf8ewZUoWDqGfOY3w6vwEMy9Qk9wbdPu3p7uDI1v2lPQjQ4O7NkL1369Z5cbAPTw-7u8mPhGv3LmBm6GzAqTcXbrMewb-pRTFOkSYhwQXXshYTiIPBI7NFzc6_P9PqtCrc4rYOBnbIUeCjbL84VhbMBsQjtVYdlEEOH2LR1a5xMfwq_4lQGIjNJtVtR9aNWUE9VoS4l-zPIaJspx4VR-_U1ehYCRMhxa6yUhAQ

vault:
  baseUrl: http://127.0.0.1:8200
  token: s.iq7LQVcFaM9no6J7CQf7MO5A
  secretEngine: 'kv' # Optional. By default it uses 'secrets'. Can be overwritten by the annotation of the entity
  # kvVersion: 2